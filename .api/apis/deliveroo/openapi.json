{
  "openapi": "3.1.0",
  "info": {
    "title": "Site API",
    "version": "1.0",
    "contact": {
      "name": "Order Management APIs team"
    }
  },
  "x-readme": {
    "explorer-enabled": false
  },
  "servers": [
    {
      "url": "https://api.developers.deliveroo.com/site",
      "description": "Production API"
    },
    {
      "url": "https://api-sandbox.developers.deliveroo.com/site",
      "description": "Sandbox"
    }
  ],
  "paths": {
    "/v1/restaurant_locations/{site_id}": {
      "parameters": [
        {
          "name": "site_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Identifier defined by the user."
        }
      ],
      "get": {
        "operationId": "get_v2-site-brand-id",
        "tags": [
          "Brand ID"
        ],
        "summary": "Get Site Brand ID",
        "description": "The Get Site Brand ID returns `brand_id` of a site which is required to be passed as path parameter for the following Menu API endpoints:\n- Get/Upload Menu\n- Update PLUs\n- Get/Update/Replace Menu Item Unavailabilities\n",
        "responses": {
          "200": {
            "description": "Get Brand ID for a Site",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Site ID",
                      "type": "string",
                      "example": "site-id-1"
                    },
                    "brand_id": {
                      "description": "It always contains one element.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": {
                  "id": "site-id=1",
                  "brand_id": [
                    "brand-id-1"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "bad_request",
                    "message": "bad request"
                  }
                },
                "schema": {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "error": {
                      "description": "Error body",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "HTTP status code description.",
                          "type": "string"
                        },
                        "message": {
                          "description": "Details about the error.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The provided API key and API token is invalid or disabled.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "unauthorized",
                          "message": "The provided API key and API token is invalid or disabled."
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "not_found"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "Something went wrong on our end. You'll have to try again later once we've fixed it.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "internal_server_error",
                          "message": "Internal server error"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "Something went wrong on our end. You'll have to try again later once we've fixed it.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "internal_server_error",
                          "message": "Internal server error"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/brands/{brand_id}/sites/{site_id}/opening_hours": {
      "parameters": [
        {
          "name": "site_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Identifier defined by the user."
        },
        {
          "name": "brand_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The unique identifier for the brand."
        }
      ],
      "get": {
        "summary": "Get site opening Hours",
        "operationId": "get-site-opening-hours",
        "description": "Returns a list of opening hours for each day of the week.",
        "tags": [
          "Opening Hours"
        ],
        "responses": {
          "200": {
            "description": "Completed successfully. Data is returned in the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "opening_hours": {
                      "type": "object",
                      "properties": {
                        "monday": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "local_start_time": {
                                "type": "string",
                                "format": "date-string",
                                "example": "2020-11-24 00:00"
                              },
                              "local_end_time": {
                                "type": "string",
                                "format": "date-string",
                                "example": "2020-11-24 00:00"
                              }
                            }
                          }
                        },
                        "tuesday": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "local_start_time": {
                                "type": "string",
                                "format": "date-string",
                                "example": "2020-11-24 00:00"
                              },
                              "local_end_time": {
                                "type": "string",
                                "format": "date-string",
                                "example": "2020-11-24 00:00"
                              }
                            }
                          }
                        },
                        "wednesday": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "local_start_time": {
                                "type": "string",
                                "format": "date-string",
                                "example": "2020-11-24 00:00"
                              },
                              "local_end_time": {
                                "type": "string",
                                "format": "date-string",
                                "example": "2020-11-24 00:00"
                              }
                            }
                          }
                        },
                        "thursday": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "local_start_time": {
                                "type": "string",
                                "format": "date-string",
                                "example": "2020-11-24 00:00"
                              },
                              "local_end_time": {
                                "type": "string",
                                "format": "date-string",
                                "example": "2020-11-24 00:00"
                              }
                            }
                          }
                        },
                        "friday": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "local_start_time": {
                                "type": "string",
                                "format": "date-string",
                                "example": "2020-11-24 00:00"
                              },
                              "local_end_time": {
                                "type": "string",
                                "format": "date-string",
                                "example": "2020-11-24 00:00"
                              }
                            }
                          }
                        }
                      },
                      "example": null
                    }
                  },
                  "example": {
                    "opening_hours": {
                      "monday": [
                        {
                          "local_start_time": "12:00",
                          "local_end_time": "14:00"
                        },
                        {
                          "local_start_time": "16:00",
                          "local_end_time": "20:00"
                        }
                      ],
                      "tuesday": [
                        {
                          "local_start_time": "12:00",
                          "local_end_time": "17:00"
                        }
                      ],
                      "wednesday": [
                        {
                          "local_start_time": "12:00",
                          "local_end_time": "14:00"
                        },
                        {
                          "local_start_time": "16:00",
                          "local_end_time": "20:00"
                        }
                      ],
                      "thursday": [
                        {
                          "local_start_time": "12:00",
                          "local_end_time": "15:00"
                        }
                      ],
                      "friday": [
                        {
                          "local_start_time": "12:00",
                          "local_end_time": "15:00"
                        }
                      ],
                      "saturday": [
                        {
                          "local_start_time": "12:00",
                          "local_end_time": "15:00"
                        }
                      ],
                      "sunday": [
                        {
                          "local_start_time": "12:00",
                          "local_end_time": "14:00"
                        },
                        {
                          "local_start_time": "16:00",
                          "local_end_time": "20:00"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Typically, a required parameter is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "bad_request",
                          "message": "invalid request"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "not_found"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "Something went wrong on our end. You'll have to try again later once we've fixed it.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "internal_server_error",
                          "message": "Internal server error"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Update site opening hours",
        "description": "Opening hours endpoint does not support partial updates so you must specify all opening hours when updating data, so each call to this endpoint overwrites any existing opening hours.",
        "operationId": "update-site-opening-hours",
        "tags": [
          "Opening Hours"
        ],
        "requestBody": {
          "description": "Update opening hours request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "opening_hours": {
                    "type": "object",
                    "properties": {
                      "monday": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "local_start_time": {
                              "type": "string",
                              "format": "date-string",
                              "example": "2020-11-24 00:00"
                            },
                            "local_end_time": {
                              "type": "string",
                              "format": "date-string",
                              "example": "2020-11-24 00:00"
                            }
                          }
                        }
                      },
                      "tuesday": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "local_start_time": {
                              "type": "string",
                              "format": "date-string",
                              "example": "2020-11-24 00:00"
                            },
                            "local_end_time": {
                              "type": "string",
                              "format": "date-string",
                              "example": "2020-11-24 00:00"
                            }
                          }
                        }
                      },
                      "wednesday": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "local_start_time": {
                              "type": "string",
                              "format": "date-string",
                              "example": "2020-11-24 00:00"
                            },
                            "local_end_time": {
                              "type": "string",
                              "format": "date-string",
                              "example": "2020-11-24 00:00"
                            }
                          }
                        }
                      },
                      "thursday": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "local_start_time": {
                              "type": "string",
                              "format": "date-string",
                              "example": "2020-11-24 00:00"
                            },
                            "local_end_time": {
                              "type": "string",
                              "format": "date-string",
                              "example": "2020-11-24 00:00"
                            }
                          }
                        }
                      },
                      "friday": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "local_start_time": {
                              "type": "string",
                              "format": "date-string",
                              "example": "2020-11-24 00:00"
                            },
                            "local_end_time": {
                              "type": "string",
                              "format": "date-string",
                              "example": "2020-11-24 00:00"
                            }
                          }
                        }
                      }
                    },
                    "example": null
                  }
                },
                "example": {
                  "opening_hours": {
                    "monday": [
                      {
                        "local_start_time": "12:00",
                        "local_end_time": "14:00"
                      },
                      {
                        "local_start_time": "16:00",
                        "local_end_time": "20:00"
                      }
                    ],
                    "tuesday": [
                      {
                        "local_start_time": "12:00",
                        "local_end_time": "17:00"
                      }
                    ],
                    "wednesday": [
                      {
                        "local_start_time": "12:00",
                        "local_end_time": "14:00"
                      },
                      {
                        "local_start_time": "16:00",
                        "local_end_time": "20:00"
                      }
                    ],
                    "thursday": [
                      {
                        "local_start_time": "12:00",
                        "local_end_time": "15:00"
                      }
                    ],
                    "friday": [
                      {
                        "local_start_time": "12:00",
                        "local_end_time": "15:00"
                      }
                    ],
                    "saturday": [
                      {
                        "local_start_time": "12:00",
                        "local_end_time": "15:00"
                      }
                    ],
                    "sunday": [
                      {
                        "local_start_time": "12:00",
                        "local_end_time": "14:00"
                      },
                      {
                        "local_start_time": "16:00",
                        "local_end_time": "20:00"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Completed successfully. Data is returned in the response body."
          },
          "400": {
            "description": "Typically, a required parameter is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "bad_request",
                          "message": "invalid request"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "The provided API key and API token is invalid or disabled.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "unauthorized",
                          "message": "The provided API key and API token is invalid or disabled."
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "not_found"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "Something went wrong on our end. You'll have to try again later once we've fixed it.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "internal_server_error",
                          "message": "Internal server error"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/brands/{brand_id}/sites": {
      "parameters": [
        {
          "name": "brand_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The unique identifier for the brand."
        }
      ],
      "get": {
        "summary": "Get sites for a brand",
        "description": "Returns a list of the sites a brand has.",
        "operationId": "get-sites-for-a-brand",
        "tags": [
          "Listing"
        ],
        "responses": {
          "200": {
            "description": "Completed successfully. Data is returned in the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sites": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "location_id": {
                            "type": "string",
                            "example": "location-test-1"
                          },
                          "name": {
                            "type": "string",
                            "example": "Name of site1"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "OPEN",
                              "CLOSED",
                              "READY_TO_OPEN"
                            ]
                          },
                          "api_access": {
                            "type": "object",
                            "properties": {
                              "fulfillment": {
                                "type": "boolean"
                              },
                              "kiosk": {
                                "type": "boolean"
                              },
                              "menu": {
                                "type": "boolean"
                              },
                              "picking": {
                                "type": "boolean"
                              },
                              "pos": {
                                "type": "boolean"
                              },
                              "rider_status_updates": {
                                "type": "boolean"
                              },
                              "site": {
                                "type": "boolean"
                              },
                              "update_order_status": {
                                "type": "boolean"
                              }
                            }
                          },
                          "phone_number": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "RESTAURANT",
                              "ON_DEMAND_CONVENIENCE",
                              "UNKNOWN"
                            ]
                          },
                          "on_vacation": {
                            "type": "boolean"
                          },
                          "timezone": {
                            "type": "string",
                            "example": "Europe/London"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "sites": [
                      {
                        "location_id": "location-test-1",
                        "name": "Name of site1",
                        "status": "OPEN",
                        "api_access": {
                          "fulfillment": false,
                          "kiosk": true,
                          "menu": true,
                          "picking": false,
                          "pos": false,
                          "rider_status_updates": true,
                          "site": false,
                          "update_order_status": false
                        },
                        "phone_number": 7777777777,
                        "type": "RESTAURANT",
                        "on_vacation": false,
                        "timezone": "Europe/London"
                      },
                      {
                        "location_id": "location-test-2",
                        "name": "Name of site2",
                        "status": "OPEN",
                        "api_access": {
                          "fulfillment": false,
                          "kiosk": true,
                          "menu": true,
                          "picking": false,
                          "pos": false,
                          "rider_status_updates": true,
                          "site": false,
                          "update_order_status": false
                        },
                        "phone_number": 7777777777,
                        "type": "RESTAURANT",
                        "on_vacation": false,
                        "timezone": "Europe/London"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Typically, a required parameter is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "bad_request",
                          "message": "invalid request"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "not_found"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "Something went wrong on our end. You'll have to try again later once we've fixed it.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "internal_server_error",
                          "message": "Internal server error"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/brands/{brand_id}/sites/{site_id}/status": {
      "parameters": [
        {
          "name": "brand_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The unique identifier for the brand."
        },
        {
          "name": "site_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Identifier defined by the user."
        }
      ],
      "get": {
        "summary": "Get site status",
        "operationId": "get-site-status",
        "description": "The status defines if a site is open or closed. It can be retrieved using the following endpoint.",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "Completed successfully. Data is returned in the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "OPEN",
                        "CLOSED",
                        "READY_TO_OPEN"
                      ],
                      "example": "OPEN"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Typically, a required parameter is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "bad_request",
                          "message": "invalid request"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "The provided API key and API token is invalid or disabled.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "unauthorized",
                          "message": "The provided API key and API token is invalid or disabled."
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "not_found"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "Something went wrong on our end. You'll have to try again later once we've fixed it.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "internal_server_error",
                          "message": "Internal server error"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update site status",
        "operationId": "update-site-status",
        "description": "It is not allowed to open a site outside of its opening hours, It will return 400 (bad request) error.",
        "tags": [
          "Status"
        ],
        "requestBody": {
          "description": "Update site status request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "OPEN",
                      "CLOSED",
                      "READY_TO_OPEN"
                    ],
                    "example": "OPEN"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Completed successfully"
          },
          "400": {
            "description": "Typically, a required parameter is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "bad_request",
                          "message": "invalid request"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "The provided API key and API token is invalid or disabled.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "unauthorized",
                          "message": "The provided API key and API token is invalid or disabled."
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "not_found"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "Something went wrong on our end. You'll have to try again later once we've fixed it.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "internal_server_error",
                          "message": "Internal server error"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/brands/{brand_id}/sites/{site_id}/time_zone": {
      "summary": "Time zone",
      "description": "Endpoints relating to the time zone of a site.",
      "parameters": [
        {
          "name": "brand_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The unique identifier for the brand."
        },
        {
          "name": "site_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Identifier defined by the user."
        }
      ],
      "get": {
        "summary": "Get site time zone",
        "description": "Retrieves the time zone of a site.",
        "operationId": "get-site-time-zone",
        "tags": [
          "Time Zone"
        ],
        "responses": {
          "200": {
            "description": "Completed successfully. Data is returned in the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "time_zone": {
                      "type": "string",
                      "example": "Europe/London"
                    }
                  },
                  "example": {
                    "time_zone": "Europe/London"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Typically, a required parameter is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "bad_request",
                          "message": "invalid request"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "The provided API key and API token is invalid or disabled.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "unauthorized",
                          "message": "The provided API key and API token is invalid or disabled."
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "not_found"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "Something went wrong on our end. You'll have to try again later once we've fixed it.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "internal_server_error",
                          "message": "Internal server error"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/brands/{brand_id}/sites/{site_id}/days_off/{days_off_id}": {
      "summary": "Days off",
      "description": "Endpoints that allow a developer to control days off periods for a given site. Days off are exceptions to the normal operating hours of a site that are applied each day.",
      "parameters": [
        {
          "name": "brand_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The unique identifier for the brand."
        },
        {
          "name": "site_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Identifier defined by the user."
        },
        {
          "name": "days_off_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The unique identifier for the days off."
        }
      ],
      "get": {
        "summary": "Get a site days off period",
        "description": "A days off period can be retrieved by using this endpoint.",
        "operationId": "get-days-off-by-id",
        "tags": [
          "Days Off"
        ],
        "responses": {
          "200": {
            "description": "Successfully returning the days off period.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 15158
                    },
                    "days_off_id": {
                      "type": "string",
                      "example": "gb:fab7c7f3-e6eb-4eef-8d06-9f57aa521af5"
                    },
                    "start_at": {
                      "type": "string",
                      "format": "date-string",
                      "example": "2021-12-10 00:00"
                    },
                    "end_at": {
                      "type": "string",
                      "format": "date-string",
                      "example": "2021-12-10 00:00"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "cancelled_at": {
                      "type": "string",
                      "format": "date-string",
                      "example": "2021-12-10 00:00"
                    }
                  },
                  "example": {
                    "id": 15158,
                    "days_off_id": "gb:fab7c7f3-e6eb-4eef-8d06-9f57aa521af5",
                    "local_start_time": "2020-11-24 00:00",
                    "local_end_time": "2020-12-26 23:59",
                    "reason": "DAYS_OFF",
                    "cancelled_at": null
                  }
                }
              }
            }
          },
          "400": {
            "description": "Typically, a required parameter is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "bad_request",
                          "message": "invalid request"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "The provided API key and API token is invalid or disabled.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "unauthorized",
                          "message": "The provided API key and API token is invalid or disabled."
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "not_found"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "Something went wrong on our end. You'll have to try again later once we've fixed it.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "internal_server_error",
                          "message": "Internal server error"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a site days off period",
        "description": "This endpoint allows you to update a days-off period.  It's important to note that this endpoint permits the creation of multiple days-off periods with overlapping hours.  Only the start time and end time properties can be updated. It is also important to note that if Deliveroo detects that a site is not functioning as expected,  a closed_period.reason equals to \"FORCED_CLOSURE\" may be created.  This type of closed period cannot be updated or canceled via the API.  If you need to cancel a \"FORCED_CLOSURE\" period, you must contact Deliveroo directly.\n",
        "operationId": "update-days-off",
        "tags": [
          "Days Off"
        ],
        "requestBody": {
          "description": "Update days off request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "days_off_id": {
                    "type": "string",
                    "example": "gb:fab7c7f3-e6eb-4eef-8d06-9f57aa521af5"
                  },
                  "local_start_time": {
                    "type": "string",
                    "format": "date-string",
                    "example": "2020-11-24 00:00"
                  },
                  "local_end_time": {
                    "type": "string",
                    "format": "date-string",
                    "example": "2020-11-24 00:00"
                  }
                },
                "example": {
                  "days_off_id": "gb:fab7c7f3-e6eb-4eef-8d06-9f57aa521af5",
                  "local_start_time": "2020-11-24 00:00",
                  "local_end_time": "2020-12-26 23:59"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Completed successfully. Data is returned in the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "days_off_id": {
                          "type": "string"
                        },
                        "local_start_time": {
                          "type": "string",
                          "format": "date-string",
                          "example": "2021-11-16 00:00"
                        },
                        "local_end_time": {
                          "type": "string",
                          "format": "date-string",
                          "example": "2021-11-16 00:00"
                        },
                        "reason": {
                          "type": "string"
                        },
                        "cancelled_at": {
                          "type": "string",
                          "format": "date-string",
                          "example": "2021-11-16 00:00"
                        }
                      }
                    },
                    {
                      "example": {
                        "id": 15158,
                        "days_off_id": "gb:fab7c7f3-e6eb-4eef-8d06-9f57aa521af5",
                        "local_start_time": "2020-11-24 00:00",
                        "local_end_time": "2020-12-26 23:59",
                        "reason": "DAYS_OFF",
                        "cancelled_at": null
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Typically, a required parameter is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "bad_request",
                          "message": "invalid request"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "The provided API key and API token is invalid or disabled.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "unauthorized",
                          "message": "The provided API key and API token is invalid or disabled."
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "not_found"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "Something went wrong on our end. You'll have to try again later once we've fixed it.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "internal_server_error",
                          "message": "Internal server error"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Cancel a site days off period",
        "description": "This endpoint allows you to update a days-off period. It is important to note that if Deliveroo detects that a site is not functioning as expected,  a closed_period.reason equals to \"FORCED_CLOSURE\" may be created.  This type of closed period cannot be updated or canceled via the API.  If you need to cancel a \"FORCED_CLOSURE\" period, you must contact Deliveroo directly.\n",
        "operationId": "cancel-days-off",
        "tags": [
          "Days Off"
        ],
        "responses": {
          "200": {
            "description": "Completed successfully. Data is returned in the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "days_off_id": {
                          "type": "string"
                        },
                        "local_start_time": {
                          "type": "string",
                          "format": "date-string",
                          "example": "2021-11-16 00:00"
                        },
                        "local_end_time": {
                          "type": "string",
                          "format": "date-string",
                          "example": "2021-11-16 00:00"
                        },
                        "reason": {
                          "type": "string"
                        },
                        "cancelled_at": {
                          "type": "string",
                          "format": "date-string",
                          "example": "2021-11-16 00:00"
                        }
                      }
                    },
                    {
                      "example": {
                        "id": 15158,
                        "days_off_id": "gb:fab7c7f3-e6eb-4eef-8d06-9f57aa521af5",
                        "local_start_time": "2020-11-24 00:00",
                        "local_end_time": "2020-12-26 23:59",
                        "reason": "DAYS_OFF",
                        "cancelled_at": null
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Typically, a required parameter is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "bad_request",
                          "message": "invalid request"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "The provided API key and API token is invalid or disabled.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "unauthorized",
                          "message": "The provided API key and API token is invalid or disabled."
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "not_found"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "Something went wrong on our end. You'll have to try again later once we've fixed it.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "internal_server_error",
                          "message": "Internal server error"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/brands/{brand_id}/sites/{site_id}/days_off": {
      "summary": "All Days off",
      "description": "Endpoints that allow a developer to control days off periods for a given site. Days off are exceptions to the normal operating hours of a site that are applied each day.",
      "parameters": [
        {
          "name": "brand_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The unique identifier for the brand."
        },
        {
          "name": "site_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Identifier defined by the user."
        }
      ],
      "post": {
        "summary": "Add a new site days off",
        "operationId": "add-new-days-off",
        "description": "Endpoint that will add the new days off to the site.",
        "tags": [
          "Days Off"
        ],
        "requestBody": {
          "description": "Add new days off request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "local_start_time": {
                    "type": "string",
                    "format": "date-string",
                    "example": "2020-11-24 00:00"
                  },
                  "local_end_time": {
                    "type": "string",
                    "format": "date-string",
                    "example": "2020-11-24 00:00"
                  }
                },
                "example": {
                  "local_start_time": "2020-11-24 00:00",
                  "local_end_time": "2020-12-26 23:59"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Completed successfully. Data is returned in the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "days_off_id": {
                          "type": "string"
                        },
                        "local_start_time": {
                          "type": "string",
                          "format": "date-string",
                          "example": "2021-11-16 00:00"
                        },
                        "local_end_time": {
                          "type": "string",
                          "format": "date-string",
                          "example": "2021-11-16 00:00"
                        },
                        "reason": {
                          "type": "string"
                        },
                        "cancelled_at": {
                          "type": "string",
                          "format": "date-string",
                          "example": "2021-11-16 00:00"
                        }
                      }
                    },
                    {
                      "example": {
                        "id": 15158,
                        "days_off_id": "gb:fab7c7f3-e6eb-4eef-8d06-9f57aa521af5",
                        "local_start_time": "2020-11-24 00:00",
                        "local_end_time": "2020-12-26 23:59",
                        "reason": "DAYS_OFF",
                        "cancelled_at": null
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Typically, a required parameter is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "bad_request",
                          "message": "invalid request"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "The provided API key and API token is invalid or disabled.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "unauthorized",
                          "message": "The provided API key and API token is invalid or disabled."
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "not_found"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "Something went wrong on our end. You'll have to try again later once we've fixed it.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "internal_server_error",
                          "message": "Internal server error"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get site days off",
        "description": "All days off defined for site can be retrieved. Note that this data is paginated.",
        "operationId": "get-all-days-off-for-a-site",
        "tags": [
          "Days Off"
        ],
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Max number of elements that can be present per page. (default is 20, maximum is 50)"
          },
          {
            "name": "page_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Number of the page. Starts at 1. (default value is 1)"
          },
          {
            "name": "upcoming",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "If true, only upcoming days off periods that are not cancelled will be retrieved."
          }
        ],
        "responses": {
          "200": {
            "description": "Get site all days off response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "days_off": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "days_off_id": {
                            "type": "string"
                          },
                          "local_start_time": {
                            "type": "string",
                            "format": "date-string",
                            "example": "2021-11-16 00:00"
                          },
                          "local_end_time": {
                            "type": "string",
                            "format": "date-string",
                            "example": "2021-11-16 00:00"
                          },
                          "reason": {
                            "type": "string"
                          },
                          "cancelled_at": {
                            "type": "string",
                            "format": "date-string",
                            "example": "2021-11-16 00:00"
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "integer"
                        },
                        "size": {
                          "type": "integer"
                        },
                        "total_times": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "example": {
                    "days_off": [
                      {
                        "id": 1,
                        "days_off_id": "gb:fab7c7f3-e6eb-4eef-8d06-9f57aa521af5",
                        "local_start_time": "2021-11-16 00:00",
                        "local_end_time": "2021-12-17 23:00",
                        "reason": "DAYS_OFF",
                        "cancelled_at": null
                      },
                      {
                        "id": 2,
                        "days_off_id": "gb:6ae4516d-71c0-4d78-8a58-8015561cae51",
                        "local_start_time": "2021-12-24 00:00",
                        "local_end_time": "2021-12-26 10:00",
                        "reason": "DAYS_OFF",
                        "cancelled_at": "2021-04-30 14:26"
                      }
                    ],
                    "page": {
                      "number": 1,
                      "size": 20,
                      "total_items": 2
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Typically, a required parameter is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "bad_request",
                          "message": "invalid request"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "The provided API key and API token is invalid or disabled.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "unauthorized",
                          "message": "The provided API key and API token is invalid or disabled."
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "not_found"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "Something went wrong on our end. You'll have to try again later once we've fixed it.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "internal_server_error",
                          "message": "Internal server error"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/brands/{brand_id}/sites/{site_id}/workload/mode": {
      "summary": "Workload mode",
      "description": "The workload mode is used to set the current workload for a site. It is important to note that changing site's workload mode the corresponding time will be applied, increasing or decreasing site's preparation time. A mode can be set to QUIET or BUSY",
      "parameters": [
        {
          "name": "brand_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The unique identifier for the brand."
        },
        {
          "name": "site_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Identifier defined by the user."
        }
      ],
      "get": {
        "summary": "Get site workload mode",
        "description": "A site workload load mode can be retrieved using the following endpoint.",
        "operationId": "get-site-workload-mode",
        "tags": [
          "Workload Mode"
        ],
        "responses": {
          "200": {
            "description": "Successfully updating workload modes.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "mode": {
                          "title": "The current site workload. Possible values are QUIET or BUSY.",
                          "type": "string"
                        }
                      }
                    },
                    {
                      "example": [
                        {
                          "mode": "BUSY"
                        },
                        {
                          "mode": "QUIET"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Typically, a required parameter is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "bad_request",
                          "message": "invalid request"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "The provided API key and API token is invalid or disabled.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "unauthorized",
                          "message": "The provided API key and API token is invalid or disabled."
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "not_found"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "Something went wrong on our end. You'll have to try again later once we've fixed it.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "internal_server_error",
                          "message": "Internal server error"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Set site workload mode",
        "description": "A site workload load mode can be set using the following endpoint.",
        "operationId": "set-site-workload-mode",
        "tags": [
          "Workload Mode"
        ],
        "responses": {
          "200": {
            "description": "Successfully updating workload modes.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "mode": {
                          "title": "The current site workload. Possible values are QUIET or BUSY.",
                          "type": "string"
                        }
                      }
                    },
                    {
                      "example": [
                        {
                          "mode": "BUSY"
                        },
                        {
                          "mode": "QUIET"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Typically, a required parameter is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "bad_request",
                          "message": "invalid request"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "The provided API key and API token is invalid or disabled.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "unauthorized",
                          "message": "The provided API key and API token is invalid or disabled."
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "not_found"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "Something went wrong on our end. You'll have to try again later once we've fixed it.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "internal_server_error",
                          "message": "Internal server error"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/brands/{brand_id}/sites/{site_id}/workload/times": {
      "summary": "Workload times",
      "description": "Each workload mode has its own corresponding preparation time. These times can be retrieved using the following endpoint. It is important to note that all time values in this endpoint are expressed in minutes.",
      "parameters": [
        {
          "name": "brand_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The unique identifier for the brand."
        },
        {
          "name": "site_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Identifier defined by the user."
        }
      ],
      "get": {
        "summary": "Get site workload times",
        "operationId": "get-site-workload-times",
        "description": "Returns the work load times, when the restaurant is busy or when the restaurant has less load.",
        "tags": [
          "Workload Times"
        ],
        "parameters": [
          {
            "name": "allowed_ranges",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If true, returns the allowed ranges for each workload mode."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returning the workload times.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Get site's workload times response body",
                  "type": "object",
                  "properties": {
                    "busy": {
                      "description": "Prep time (in minutes) applied when site workload mode is BUSY",
                      "type": "integer"
                    },
                    "quiet": {
                      "description": "Prep time (in minutes) applied when site workload mode is QUIET",
                      "type": "integer"
                    },
                    "allowed_ranges": {
                      "description": "(Optional) Map of range objects indexed by mode. This will be included only when allowed_ranges query parameter is set as true",
                      "type": "object",
                      "properties": {
                        "busy": {
                          "type": "object",
                          "properties": {
                            "min": {
                              "type": "integer"
                            },
                            "max": {
                              "type": "integer"
                            }
                          }
                        },
                        "quiet": {
                          "type": "object",
                          "properties": {
                            "min": {
                              "type": "integer"
                            },
                            "max": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "busy": 35,
                    "quiet": 15,
                    "allowed_ranges": {
                      "busy": {
                        "min": 25,
                        "max": 240
                      },
                      "quiet": {
                        "min": 20,
                        "max": 60
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Typically, a required parameter is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "bad_request",
                          "message": "invalid request"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "The provided API key and API token is invalid or disabled.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "unauthorized",
                          "message": "The provided API key and API token is invalid or disabled."
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "not_found"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "Something went wrong on our end. You'll have to try again later once we've fixed it.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "internal_server_error",
                          "message": "Internal server error"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Set site workload times",
        "description": "Workload times can be set individually for each workload mode. It is important to note that if a site wants to increment their busy prep time, this value must be greater than quiet value and the difference must be a multiple of 5. E.g. if a site's quiet is 10min, busy should be 15, 20, 25, 30, 35, etc. or any other increment that is multiple of 5.",
        "operationId": "set-site-workload-times",
        "tags": [
          "Workload Times"
        ],
        "requestBody": {
          "description": "Update workload times request body.",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "title": "Workload Times",
                    "type": "object",
                    "properties": {
                      "busy": {
                        "description": "Prep time (in minutes) applied when site workload mode is BUSY",
                        "type": "integer",
                        "example": 35
                      },
                      "quiet": {
                        "description": "Prep time (in minutes) applied when site workload mode is QUIET",
                        "type": "integer",
                        "example": 15
                      }
                    }
                  },
                  {
                    "example": {
                      "busy": 35,
                      "quiet": 15
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updating workload times.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Workload Times",
                      "type": "object",
                      "properties": {
                        "busy": {
                          "description": "Prep time (in minutes) applied when site workload mode is BUSY",
                          "type": "integer",
                          "example": 35
                        },
                        "quiet": {
                          "description": "Prep time (in minutes) applied when site workload mode is QUIET",
                          "type": "integer",
                          "example": 15
                        }
                      }
                    },
                    {
                      "example": {
                        "busy": 35,
                        "quiet": 15
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Typically, a required parameter is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "bad_request",
                          "message": "invalid request"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "The provided API key and API token is invalid or disabled.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "unauthorized",
                          "message": "The provided API key and API token is invalid or disabled."
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "The specified resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "not_found"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "Something went wrong on our end. You'll have to try again later once we've fixed it.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "internal_server_error",
                          "message": "Internal server error"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/brands": {
      "get": {
        "summary": "Get list of brands",
        "description": "Returns a list of brands.",
        "operationId": "get-all-brands",
        "tags": [
          "Brands"
        ],
        "responses": {
          "200": {
            "description": "Completed successfully. Data is returned in the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sites": {
                      "type": "array",
                      "items": {
                        "title": "Brand",
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "The identifier of the brand",
                            "type": "string",
                            "example": "b1015"
                          },
                          "name": {
                            "description": "The name of the brand",
                            "type": "string",
                            "example": "los pollos hermanos"
                          },
                          "market": {
                            "description": "The market in which the brand operates",
                            "type": "string",
                            "example": "GB"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "sites": [
                      {
                        "id": "puzzles",
                        "name": "Puzzles Bar and Grill",
                        "market": "GB"
                      },
                      {
                        "id": "enigmes",
                        "name": "puzzles bar et grill",
                        "market": "FR"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Typically, a required parameter is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "bad_request",
                          "message": "invalid request"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {}
          },
          "500": {
            "description": "Something went wrong on our end. You'll have to try again later once we've fixed it.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Error",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "Error body",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "HTTP status code description.",
                              "type": "string"
                            },
                            "message": {
                              "description": "Details about the error.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    },
                    {
                      "example": {
                        "error": {
                          "code": "internal_server_error",
                          "message": "Internal server error"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "title": "Error",
        "type": "object",
        "properties": {
          "error": {
            "description": "Error body",
            "type": "object",
            "properties": {
              "code": {
                "description": "HTTP status code description.",
                "type": "string"
              },
              "message": {
                "description": "Details about the error.",
                "type": "string"
              }
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "OpeningHours": {
        "type": "object",
        "properties": {
          "monday": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "local_start_time": {
                  "type": "string",
                  "format": "date-string",
                  "example": "2020-11-24 00:00"
                },
                "local_end_time": {
                  "type": "string",
                  "format": "date-string",
                  "example": "2020-11-24 00:00"
                }
              }
            }
          },
          "tuesday": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "local_start_time": {
                  "type": "string",
                  "format": "date-string",
                  "example": "2020-11-24 00:00"
                },
                "local_end_time": {
                  "type": "string",
                  "format": "date-string",
                  "example": "2020-11-24 00:00"
                }
              }
            }
          },
          "wednesday": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "local_start_time": {
                  "type": "string",
                  "format": "date-string",
                  "example": "2020-11-24 00:00"
                },
                "local_end_time": {
                  "type": "string",
                  "format": "date-string",
                  "example": "2020-11-24 00:00"
                }
              }
            }
          },
          "thursday": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "local_start_time": {
                  "type": "string",
                  "format": "date-string",
                  "example": "2020-11-24 00:00"
                },
                "local_end_time": {
                  "type": "string",
                  "format": "date-string",
                  "example": "2020-11-24 00:00"
                }
              }
            }
          },
          "friday": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "local_start_time": {
                  "type": "string",
                  "format": "date-string",
                  "example": "2020-11-24 00:00"
                },
                "local_end_time": {
                  "type": "string",
                  "format": "date-string",
                  "example": "2020-11-24 00:00"
                }
              }
            }
          }
        },
        "example": null
      },
      "TimeRange": {
        "type": "object",
        "properties": {
          "local_start_time": {
            "type": "string",
            "format": "date-string",
            "example": "2020-11-24 00:00"
          },
          "local_end_time": {
            "type": "string",
            "format": "date-string",
            "example": "2020-11-24 00:00"
          }
        }
      },
      "Site": {
        "type": "object",
        "properties": {
          "location_id": {
            "type": "string",
            "example": "location-test-1"
          },
          "name": {
            "type": "string",
            "example": "Name of site1"
          },
          "status": {
            "type": "string",
            "enum": [
              "OPEN",
              "CLOSED",
              "READY_TO_OPEN"
            ]
          },
          "api_access": {
            "type": "object",
            "properties": {
              "fulfillment": {
                "type": "boolean"
              },
              "kiosk": {
                "type": "boolean"
              },
              "menu": {
                "type": "boolean"
              },
              "picking": {
                "type": "boolean"
              },
              "pos": {
                "type": "boolean"
              },
              "rider_status_updates": {
                "type": "boolean"
              },
              "site": {
                "type": "boolean"
              },
              "update_order_status": {
                "type": "boolean"
              }
            }
          },
          "phone_number": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "RESTAURANT",
              "ON_DEMAND_CONVENIENCE",
              "UNKNOWN"
            ]
          },
          "on_vacation": {
            "type": "boolean"
          },
          "timezone": {
            "type": "string",
            "example": "Europe/London"
          }
        }
      },
      "SiteStatusBody": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "OPEN",
              "CLOSED",
              "READY_TO_OPEN"
            ],
            "example": "OPEN"
          }
        }
      },
      "SiteDaysOff": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "days_off_id": {
            "type": "string"
          },
          "local_start_time": {
            "type": "string",
            "format": "date-string",
            "example": "2021-11-16 00:00"
          },
          "local_end_time": {
            "type": "string",
            "format": "date-string",
            "example": "2021-11-16 00:00"
          },
          "reason": {
            "type": "string"
          },
          "cancelled_at": {
            "type": "string",
            "format": "date-string",
            "example": "2021-11-16 00:00"
          }
        }
      },
      "WorkloadMode": {
        "type": "object",
        "properties": {
          "mode": {
            "title": "The current site workload. Possible values are QUIET or BUSY.",
            "type": "string"
          }
        }
      },
      "WorkloadTimes": {
        "title": "Workload Times",
        "type": "object",
        "properties": {
          "busy": {
            "description": "Prep time (in minutes) applied when site workload mode is BUSY",
            "type": "integer",
            "example": 35
          },
          "quiet": {
            "description": "Prep time (in minutes) applied when site workload mode is QUIET",
            "type": "integer",
            "example": 15
          }
        }
      },
      "Brand": {
        "title": "Brand",
        "type": "object",
        "properties": {
          "id": {
            "description": "The identifier of the brand",
            "type": "string",
            "example": "b1015"
          },
          "name": {
            "description": "The name of the brand",
            "type": "string",
            "example": "los pollos hermanos"
          },
          "market": {
            "description": "The market in which the brand operates",
            "type": "string",
            "example": "GB"
          }
        }
      }
    },
    "parameters": {
      "days_off_id": {
        "name": "days_off_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The unique identifier for the days off."
      },
      "brand_id": {
        "name": "brand_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The unique identifier for the brand."
      },
      "site_id": {
        "name": "site_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Identifier defined by the user."
      }
    },
    "requestBodies": {
      "UpdateOpeningHoursRequestBody": {
        "description": "Update opening hours request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "opening_hours": {
                  "type": "object",
                  "properties": {
                    "monday": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "local_start_time": {
                            "type": "string",
                            "format": "date-string",
                            "example": "2020-11-24 00:00"
                          },
                          "local_end_time": {
                            "type": "string",
                            "format": "date-string",
                            "example": "2020-11-24 00:00"
                          }
                        }
                      }
                    },
                    "tuesday": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "local_start_time": {
                            "type": "string",
                            "format": "date-string",
                            "example": "2020-11-24 00:00"
                          },
                          "local_end_time": {
                            "type": "string",
                            "format": "date-string",
                            "example": "2020-11-24 00:00"
                          }
                        }
                      }
                    },
                    "wednesday": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "local_start_time": {
                            "type": "string",
                            "format": "date-string",
                            "example": "2020-11-24 00:00"
                          },
                          "local_end_time": {
                            "type": "string",
                            "format": "date-string",
                            "example": "2020-11-24 00:00"
                          }
                        }
                      }
                    },
                    "thursday": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "local_start_time": {
                            "type": "string",
                            "format": "date-string",
                            "example": "2020-11-24 00:00"
                          },
                          "local_end_time": {
                            "type": "string",
                            "format": "date-string",
                            "example": "2020-11-24 00:00"
                          }
                        }
                      }
                    },
                    "friday": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "local_start_time": {
                            "type": "string",
                            "format": "date-string",
                            "example": "2020-11-24 00:00"
                          },
                          "local_end_time": {
                            "type": "string",
                            "format": "date-string",
                            "example": "2020-11-24 00:00"
                          }
                        }
                      }
                    }
                  },
                  "example": null
                }
              },
              "example": {
                "opening_hours": {
                  "monday": [
                    {
                      "local_start_time": "12:00",
                      "local_end_time": "14:00"
                    },
                    {
                      "local_start_time": "16:00",
                      "local_end_time": "20:00"
                    }
                  ],
                  "tuesday": [
                    {
                      "local_start_time": "12:00",
                      "local_end_time": "17:00"
                    }
                  ],
                  "wednesday": [
                    {
                      "local_start_time": "12:00",
                      "local_end_time": "14:00"
                    },
                    {
                      "local_start_time": "16:00",
                      "local_end_time": "20:00"
                    }
                  ],
                  "thursday": [
                    {
                      "local_start_time": "12:00",
                      "local_end_time": "15:00"
                    }
                  ],
                  "friday": [
                    {
                      "local_start_time": "12:00",
                      "local_end_time": "15:00"
                    }
                  ],
                  "saturday": [
                    {
                      "local_start_time": "12:00",
                      "local_end_time": "15:00"
                    }
                  ],
                  "sunday": [
                    {
                      "local_start_time": "12:00",
                      "local_end_time": "14:00"
                    },
                    {
                      "local_start_time": "16:00",
                      "local_end_time": "20:00"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "UpdateSiteStatusRequestBody": {
        "description": "Update site status request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "OPEN",
                    "CLOSED",
                    "READY_TO_OPEN"
                  ],
                  "example": "OPEN"
                }
              }
            }
          }
        }
      },
      "UpdateSiteDaysOffRequestBody": {
        "description": "Update days off request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "days_off_id": {
                  "type": "string",
                  "example": "gb:fab7c7f3-e6eb-4eef-8d06-9f57aa521af5"
                },
                "local_start_time": {
                  "type": "string",
                  "format": "date-string",
                  "example": "2020-11-24 00:00"
                },
                "local_end_time": {
                  "type": "string",
                  "format": "date-string",
                  "example": "2020-11-24 00:00"
                }
              },
              "example": {
                "days_off_id": "gb:fab7c7f3-e6eb-4eef-8d06-9f57aa521af5",
                "local_start_time": "2020-11-24 00:00",
                "local_end_time": "2020-12-26 23:59"
              }
            }
          }
        }
      },
      "AddNewSiteDaysOffRequestBody": {
        "description": "Add new days off request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "local_start_time": {
                  "type": "string",
                  "format": "date-string",
                  "example": "2020-11-24 00:00"
                },
                "local_end_time": {
                  "type": "string",
                  "format": "date-string",
                  "example": "2020-11-24 00:00"
                }
              },
              "example": {
                "local_start_time": "2020-11-24 00:00",
                "local_end_time": "2020-12-26 23:59"
              }
            }
          }
        }
      },
      "UpdateWorkloadTimesRequestBody": {
        "description": "Update workload times request body.",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "title": "Workload Times",
                  "type": "object",
                  "properties": {
                    "busy": {
                      "description": "Prep time (in minutes) applied when site workload mode is BUSY",
                      "type": "integer",
                      "example": 35
                    },
                    "quiet": {
                      "description": "Prep time (in minutes) applied when site workload mode is QUIET",
                      "type": "integer",
                      "example": 15
                    }
                  }
                },
                {
                  "example": {
                    "busy": 35,
                    "quiet": 15
                  }
                }
              ]
            }
          }
        }
      }
    },
    "responses": {
      "GetBrandIDResponseBody": {
        "description": "Get Brand ID for a Site",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Site ID",
                  "type": "string",
                  "example": "site-id-1"
                },
                "brand_id": {
                  "description": "It always contains one element.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "example": {
              "id": "site-id=1",
              "brand_id": [
                "brand-id-1"
              ]
            }
          }
        }
      },
      "GetOpeningHoursResponseBody": {
        "description": "Completed successfully. Data is returned in the response body.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "opening_hours": {
                  "type": "object",
                  "properties": {
                    "monday": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "local_start_time": {
                            "type": "string",
                            "format": "date-string",
                            "example": "2020-11-24 00:00"
                          },
                          "local_end_time": {
                            "type": "string",
                            "format": "date-string",
                            "example": "2020-11-24 00:00"
                          }
                        }
                      }
                    },
                    "tuesday": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "local_start_time": {
                            "type": "string",
                            "format": "date-string",
                            "example": "2020-11-24 00:00"
                          },
                          "local_end_time": {
                            "type": "string",
                            "format": "date-string",
                            "example": "2020-11-24 00:00"
                          }
                        }
                      }
                    },
                    "wednesday": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "local_start_time": {
                            "type": "string",
                            "format": "date-string",
                            "example": "2020-11-24 00:00"
                          },
                          "local_end_time": {
                            "type": "string",
                            "format": "date-string",
                            "example": "2020-11-24 00:00"
                          }
                        }
                      }
                    },
                    "thursday": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "local_start_time": {
                            "type": "string",
                            "format": "date-string",
                            "example": "2020-11-24 00:00"
                          },
                          "local_end_time": {
                            "type": "string",
                            "format": "date-string",
                            "example": "2020-11-24 00:00"
                          }
                        }
                      }
                    },
                    "friday": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "local_start_time": {
                            "type": "string",
                            "format": "date-string",
                            "example": "2020-11-24 00:00"
                          },
                          "local_end_time": {
                            "type": "string",
                            "format": "date-string",
                            "example": "2020-11-24 00:00"
                          }
                        }
                      }
                    }
                  },
                  "example": null
                }
              },
              "example": {
                "opening_hours": {
                  "monday": [
                    {
                      "local_start_time": "12:00",
                      "local_end_time": "14:00"
                    },
                    {
                      "local_start_time": "16:00",
                      "local_end_time": "20:00"
                    }
                  ],
                  "tuesday": [
                    {
                      "local_start_time": "12:00",
                      "local_end_time": "17:00"
                    }
                  ],
                  "wednesday": [
                    {
                      "local_start_time": "12:00",
                      "local_end_time": "14:00"
                    },
                    {
                      "local_start_time": "16:00",
                      "local_end_time": "20:00"
                    }
                  ],
                  "thursday": [
                    {
                      "local_start_time": "12:00",
                      "local_end_time": "15:00"
                    }
                  ],
                  "friday": [
                    {
                      "local_start_time": "12:00",
                      "local_end_time": "15:00"
                    }
                  ],
                  "saturday": [
                    {
                      "local_start_time": "12:00",
                      "local_end_time": "15:00"
                    }
                  ],
                  "sunday": [
                    {
                      "local_start_time": "12:00",
                      "local_end_time": "14:00"
                    },
                    {
                      "local_start_time": "16:00",
                      "local_end_time": "20:00"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "GetSiteForABrandResponseBody": {
        "description": "Completed successfully. Data is returned in the response body.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "sites": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "location_id": {
                        "type": "string",
                        "example": "location-test-1"
                      },
                      "name": {
                        "type": "string",
                        "example": "Name of site1"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "OPEN",
                          "CLOSED",
                          "READY_TO_OPEN"
                        ]
                      },
                      "api_access": {
                        "type": "object",
                        "properties": {
                          "fulfillment": {
                            "type": "boolean"
                          },
                          "kiosk": {
                            "type": "boolean"
                          },
                          "menu": {
                            "type": "boolean"
                          },
                          "picking": {
                            "type": "boolean"
                          },
                          "pos": {
                            "type": "boolean"
                          },
                          "rider_status_updates": {
                            "type": "boolean"
                          },
                          "site": {
                            "type": "boolean"
                          },
                          "update_order_status": {
                            "type": "boolean"
                          }
                        }
                      },
                      "phone_number": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "RESTAURANT",
                          "ON_DEMAND_CONVENIENCE",
                          "UNKNOWN"
                        ]
                      },
                      "on_vacation": {
                        "type": "boolean"
                      },
                      "timezone": {
                        "type": "string",
                        "example": "Europe/London"
                      }
                    }
                  }
                }
              },
              "example": {
                "sites": [
                  {
                    "location_id": "location-test-1",
                    "name": "Name of site1",
                    "status": "OPEN",
                    "api_access": {
                      "fulfillment": false,
                      "kiosk": true,
                      "menu": true,
                      "picking": false,
                      "pos": false,
                      "rider_status_updates": true,
                      "site": false,
                      "update_order_status": false
                    },
                    "phone_number": 7777777777,
                    "type": "RESTAURANT",
                    "on_vacation": false,
                    "timezone": "Europe/London"
                  },
                  {
                    "location_id": "location-test-2",
                    "name": "Name of site2",
                    "status": "OPEN",
                    "api_access": {
                      "fulfillment": false,
                      "kiosk": true,
                      "menu": true,
                      "picking": false,
                      "pos": false,
                      "rider_status_updates": true,
                      "site": false,
                      "update_order_status": false
                    },
                    "phone_number": 7777777777,
                    "type": "RESTAURANT",
                    "on_vacation": false,
                    "timezone": "Europe/London"
                  }
                ]
              }
            }
          }
        }
      },
      "GetSiteStatusResponseBody": {
        "description": "Completed successfully. Data is returned in the response body.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "OPEN",
                    "CLOSED",
                    "READY_TO_OPEN"
                  ],
                  "example": "OPEN"
                }
              }
            }
          }
        }
      },
      "GetTimeZoneResponseBody": {
        "description": "Completed successfully. Data is returned in the response body.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "time_zone": {
                  "type": "string",
                  "example": "Europe/London"
                }
              },
              "example": {
                "time_zone": "Europe/London"
              }
            }
          }
        }
      },
      "UpdateSiteDaysOffResponseBody": {
        "description": "Completed successfully. Data is returned in the response body.",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "days_off_id": {
                      "type": "string"
                    },
                    "local_start_time": {
                      "type": "string",
                      "format": "date-string",
                      "example": "2021-11-16 00:00"
                    },
                    "local_end_time": {
                      "type": "string",
                      "format": "date-string",
                      "example": "2021-11-16 00:00"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "cancelled_at": {
                      "type": "string",
                      "format": "date-string",
                      "example": "2021-11-16 00:00"
                    }
                  }
                },
                {
                  "example": {
                    "id": 15158,
                    "days_off_id": "gb:fab7c7f3-e6eb-4eef-8d06-9f57aa521af5",
                    "local_start_time": "2020-11-24 00:00",
                    "local_end_time": "2020-12-26 23:59",
                    "reason": "DAYS_OFF",
                    "cancelled_at": null
                  }
                }
              ]
            }
          }
        }
      },
      "AddNewSiteDaysOffResponseBody": {
        "description": "Completed successfully. Data is returned in the response body.",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "days_off_id": {
                      "type": "string"
                    },
                    "local_start_time": {
                      "type": "string",
                      "format": "date-string",
                      "example": "2021-11-16 00:00"
                    },
                    "local_end_time": {
                      "type": "string",
                      "format": "date-string",
                      "example": "2021-11-16 00:00"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "cancelled_at": {
                      "type": "string",
                      "format": "date-string",
                      "example": "2021-11-16 00:00"
                    }
                  }
                },
                {
                  "example": {
                    "id": 15158,
                    "days_off_id": "gb:fab7c7f3-e6eb-4eef-8d06-9f57aa521af5",
                    "local_start_time": "2020-11-24 00:00",
                    "local_end_time": "2020-12-26 23:59",
                    "reason": "DAYS_OFF",
                    "cancelled_at": null
                  }
                }
              ]
            }
          }
        }
      },
      "GetSiteDaysOffResponseBody": {
        "description": "Get site all days off response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "days_off": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "days_off_id": {
                        "type": "string"
                      },
                      "local_start_time": {
                        "type": "string",
                        "format": "date-string",
                        "example": "2021-11-16 00:00"
                      },
                      "local_end_time": {
                        "type": "string",
                        "format": "date-string",
                        "example": "2021-11-16 00:00"
                      },
                      "reason": {
                        "type": "string"
                      },
                      "cancelled_at": {
                        "type": "string",
                        "format": "date-string",
                        "example": "2021-11-16 00:00"
                      }
                    }
                  }
                },
                "page": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "type": "integer"
                    },
                    "size": {
                      "type": "integer"
                    },
                    "total_times": {
                      "type": "integer"
                    }
                  }
                }
              },
              "example": {
                "days_off": [
                  {
                    "id": 1,
                    "days_off_id": "gb:fab7c7f3-e6eb-4eef-8d06-9f57aa521af5",
                    "local_start_time": "2021-11-16 00:00",
                    "local_end_time": "2021-12-17 23:00",
                    "reason": "DAYS_OFF",
                    "cancelled_at": null
                  },
                  {
                    "id": 2,
                    "days_off_id": "gb:6ae4516d-71c0-4d78-8a58-8015561cae51",
                    "local_start_time": "2021-12-24 00:00",
                    "local_end_time": "2021-12-26 10:00",
                    "reason": "DAYS_OFF",
                    "cancelled_at": "2021-04-30 14:26"
                  }
                ],
                "page": {
                  "number": 1,
                  "size": 20,
                  "total_items": 2
                }
              }
            }
          }
        }
      },
      "GetSingleSiteDayOffPeriodResponseBody": {
        "description": "Successfully returning the days off period.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 15158
                },
                "days_off_id": {
                  "type": "string",
                  "example": "gb:fab7c7f3-e6eb-4eef-8d06-9f57aa521af5"
                },
                "start_at": {
                  "type": "string",
                  "format": "date-string",
                  "example": "2021-12-10 00:00"
                },
                "end_at": {
                  "type": "string",
                  "format": "date-string",
                  "example": "2021-12-10 00:00"
                },
                "reason": {
                  "type": "string"
                },
                "cancelled_at": {
                  "type": "string",
                  "format": "date-string",
                  "example": "2021-12-10 00:00"
                }
              },
              "example": {
                "id": 15158,
                "days_off_id": "gb:fab7c7f3-e6eb-4eef-8d06-9f57aa521af5",
                "local_start_time": "2020-11-24 00:00",
                "local_end_time": "2020-12-26 23:59",
                "reason": "DAYS_OFF",
                "cancelled_at": null
              }
            }
          }
        }
      },
      "WorkloadModeResponseBody": {
        "description": "Successfully updating workload modes.",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "mode": {
                      "title": "The current site workload. Possible values are QUIET or BUSY.",
                      "type": "string"
                    }
                  }
                },
                {
                  "example": [
                    {
                      "mode": "BUSY"
                    },
                    {
                      "mode": "QUIET"
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "GetWorkloadTimesResponseBody": {
        "description": "Successfully returning the workload times.",
        "content": {
          "application/json": {
            "schema": {
              "title": "Get site's workload times response body",
              "type": "object",
              "properties": {
                "busy": {
                  "description": "Prep time (in minutes) applied when site workload mode is BUSY",
                  "type": "integer"
                },
                "quiet": {
                  "description": "Prep time (in minutes) applied when site workload mode is QUIET",
                  "type": "integer"
                },
                "allowed_ranges": {
                  "description": "(Optional) Map of range objects indexed by mode. This will be included only when allowed_ranges query parameter is set as true",
                  "type": "object",
                  "properties": {
                    "busy": {
                      "type": "object",
                      "properties": {
                        "min": {
                          "type": "integer"
                        },
                        "max": {
                          "type": "integer"
                        }
                      }
                    },
                    "quiet": {
                      "type": "object",
                      "properties": {
                        "min": {
                          "type": "integer"
                        },
                        "max": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "busy": 35,
                "quiet": 15,
                "allowed_ranges": {
                  "busy": {
                    "min": 25,
                    "max": 240
                  },
                  "quiet": {
                    "min": 20,
                    "max": 60
                  }
                }
              }
            }
          }
        }
      },
      "UpdateWorkloadTimesResponseBody": {
        "description": "Successfully updating workload times.",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "title": "Workload Times",
                  "type": "object",
                  "properties": {
                    "busy": {
                      "description": "Prep time (in minutes) applied when site workload mode is BUSY",
                      "type": "integer",
                      "example": 35
                    },
                    "quiet": {
                      "description": "Prep time (in minutes) applied when site workload mode is QUIET",
                      "type": "integer",
                      "example": 15
                    }
                  }
                },
                {
                  "example": {
                    "busy": 35,
                    "quiet": 15
                  }
                }
              ]
            }
          }
        }
      },
      "GetListOfBrandsResponse": {
        "description": "Completed successfully. Data is returned in the response body.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "sites": {
                  "type": "array",
                  "items": {
                    "title": "Brand",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The identifier of the brand",
                        "type": "string",
                        "example": "b1015"
                      },
                      "name": {
                        "description": "The name of the brand",
                        "type": "string",
                        "example": "los pollos hermanos"
                      },
                      "market": {
                        "description": "The market in which the brand operates",
                        "type": "string",
                        "example": "GB"
                      }
                    }
                  }
                }
              },
              "example": {
                "sites": [
                  {
                    "id": "puzzles",
                    "name": "Puzzles Bar and Grill",
                    "market": "GB"
                  },
                  {
                    "id": "enigmes",
                    "name": "puzzles bar et grill",
                    "market": "FR"
                  }
                ]
              }
            }
          }
        }
      },
      "ErrorBadRequest": {
        "description": "Typically, a required parameter is missing or invalid.",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "error": {
                      "description": "Error body",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "HTTP status code description.",
                          "type": "string"
                        },
                        "message": {
                          "description": "Details about the error.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "example": {
                    "error": {
                      "code": "bad_request",
                      "message": "invalid request"
                    }
                  }
                }
              ]
            }
          }
        },
        "headers": {}
      },
      "ErrorUnauthorized": {
        "description": "The provided API key and API token is invalid or disabled.",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "error": {
                      "description": "Error body",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "HTTP status code description.",
                          "type": "string"
                        },
                        "message": {
                          "description": "Details about the error.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "example": {
                    "error": {
                      "code": "unauthorized",
                      "message": "The provided API key and API token is invalid or disabled."
                    }
                  }
                }
              ]
            }
          }
        },
        "headers": {}
      },
      "ErrorNotFound": {
        "description": "The specified resource could not be found.",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "error": {
                      "description": "Error body",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "HTTP status code description.",
                          "type": "string"
                        },
                        "message": {
                          "description": "Details about the error.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "example": {
                    "error": {
                      "code": "not_found"
                    }
                  }
                }
              ]
            }
          }
        },
        "headers": {}
      },
      "ErrorServerError": {
        "description": "Something went wrong on our end. You'll have to try again later once we've fixed it.",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "title": "Error",
                  "type": "object",
                  "properties": {
                    "error": {
                      "description": "Error body",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "HTTP status code description.",
                          "type": "string"
                        },
                        "message": {
                          "description": "Details about the error.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "example": {
                    "error": {
                      "code": "internal_server_error",
                      "message": "Internal server error"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "securitySchemes": {
      "OAuth2-Production": {
        "type": "oauth2",
        "description": "OAuth for Production",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://auth.developers.deliveroo.com/oauth2/token",
            "scopes": {}
          }
        }
      },
      "OAuth2-Sandbox": {
        "type": "oauth2",
        "description": "OAuth for Sandbox",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://auth-sandbox.developers.deliveroo.com/oauth2/token",
            "scopes": {}
          }
        }
      }
    }
  },
  "security": [
    {
      "OAuth2-Production": []
    }
  ],
  "tags": [
    {
      "name": "Status"
    },
    {
      "name": "Days Off"
    },
    {
      "name": "Opening Hours"
    },
    {
      "name": "Time Zone"
    },
    {
      "name": "Listing"
    },
    {
      "name": "Workload Mode"
    },
    {
      "name": "Workload Times"
    }
  ]
}